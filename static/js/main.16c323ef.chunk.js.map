{"version":3,"sources":["components/NavigationBar/index.tsx","containers/MainPage/Header/index.tsx","components/SearchBar/index.tsx","containers/MainPage/MainContent/SearchBarBlock/index.tsx","containers/MainPage/MainContent/SearchResult/RepositoryItem/index.tsx","containers/MainPage/MainContent/SearchResult/index.tsx","actions/githubReposSearchActions.tsx","components/CircularIndeterminate/index.tsx","containers/MainPage/MainContent/index.tsx","containers/MainPage/index.tsx","theme/index.tsx","utils/meta.tsx","reducers/githubReposSearchReducer/index.tsx","reducers/index.tsx","utils/request.tsx","epics/githubReposSearchEpics.tsx","epics/index.tsx","store/configureStore.tsx","store/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/NavigationBar/dcard_logo.svg"],"names":["useStyles","makeStyles","theme","navigationBar","custom","root","height","background","backgroundColor","color","boxSizing","display","justifyContent","container","props","alignItems","padding","matches","margin","width","maxWidth","logo","button","NavigationBar","isDarkMode","handleChangeTheme","useMediaQuery","classes","ThemeIcon","Brightness7Icon","Brightness4Icon","className","src","dcardLogoPath","alt","IconButton","aria-label","onClick","Header","createStyles","borderRadius","input","marginLeft","spacing","flex","iconButton","SearchBar","handleOnChange","Paper","component","disabled","InputBase","placeholder","inputProps","onChange","SearchBarBlock","StyledChip","withStyles","marginRight","Chip","repositoryItem","content","fullName","fontSize","fontWeight","description","secondaryColor","lineHeight","chips","marginTop","RepositoryItem","item","owner","Avatar","login","avatar_url","full_name","variant","size","label","language","icon","stargazers_count","watchers","StyledContainer","Container","borderBottom","SearchResult","repositories","items","map","ListItem","key","id","KEY","FETCH_REPOSITORIES","SET_REPOSITORIES","FETCH_REPOSITORIES_LOADING","LOAD_REPOSITORIES","LOAD_REPOSITORIES_LOADING","UPDATE_REPOSITORIES_LOADING","setRepositories","error","data","type","payload","updateRepositories","CircularIndeterminate","CircularProgress","style","mainContent","overflowY","connect","state","githubReposSearchReducer","fetchMeta","loadMeta","page","perPage","isLastPage","dispatch","handleFetchRepositories","params","queryString","fetchRepositories","handleLoadRepositories","loadRepositories","mainContentRef","useRef","useState","setQueryString","handleOnQueryChange","useCallback","event","value","target","length","handleOnScroll","$rDOM","current","scrollTop","clientHeight","scrollHeight","ref","onScroll","isLoading","isLoaded","flexDirection","MainPage","sharedProperty","customTheme","border","default","boxShadow","darkTheme","createMuiTheme","palette","dcardTheme","updateMetaLoading","meta","update","$set","updateMetaDone","updateMetaError","initialState","total_count","META","rootReducer","combineReducers","action","$apply","prevPage","prevRepositories","prevItems","fetchErrorEpic","err","actions","of","request","method","url","fetchOption","headers","defaultOption","Headers","toLowerCase","body","JSON","stringify","getFetchOption","from","fetch","then","response","pipe","mergeMap","res","Promise","resolve","reject","json","fulfilled","status","action$","ofType","debounceTime","switchMap","catchError","startWith","rootEpic","combineEpics","githubReposSearchEpics","epicMiddleware","createEpicMiddleware","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","enhancers","applyMiddleware","createStore","run","configureStore","App","themes","themeIndex","setThemeIndex","prevIndex","ThemeProvider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.16c323ef.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n\tBrightness7 as Brightness7Icon,\n\tBrightness4 as Brightness4Icon,\n} from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport dcardLogoPath from './dcard_logo.svg';\n\ninterface IProps {\n\tmatches: boolean;\n}\n\nconst useStyles = makeStyles(theme => {\n\tconst {\n\t\tcustom: { navigationBar },\n\t\tnavigationBar: { height },\n\t} = theme as any;\n\treturn {\n\t\troot: {\n\t\t\theight: height,\n\t\t\tbackground: navigationBar.backgroundColor,\n\t\t\tcolor: navigationBar.color,\n\t\t\tboxSizing: 'border-box',\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tcontainer: (props: IProps) => ({\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'space-between',\n\t\t\tpadding: props.matches ? '0 20px' : '0 8px 0 20px',\n\t\t\tmargin: 'auto',\n\t\t\tboxSizing: 'border-box',\n\t\t\twidth: 1280,\n\t\t\tmaxWidth: 1280,\n\t\t}),\n\t\tlogo: (props: IProps) => ({\n\t\t\tdisplay: 'block',\n\t\t\theight: 28,\n\t\t\tpadding: props.matches ? '0 16px' : 0,\n\t\t}),\n\t\tbutton: {\n\t\t\tcolor: navigationBar.color,\n\t\t},\n\t};\n});\n\ninterface INavigationBar {\n\tisDarkMode: boolean;\n\thandleChangeTheme: () => void;\n}\n\nconst NavigationBar = ({ isDarkMode, handleChangeTheme }: INavigationBar) => {\n\tconst matches = useMediaQuery('(min-width: 768px)');\n\tconst classes = useStyles({ matches });\n\tconst ThemeIcon = isDarkMode ? Brightness7Icon : Brightness4Icon;\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.container}>\n\t\t\t\t<img src={dcardLogoPath} className={classes.logo} alt=\"dcard logo\" />\n\t\t\t\t<IconButton\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\taria-label=\"theme change\"\n\t\t\t\t\tonClick={handleChangeTheme}\n\t\t\t\t>\n\t\t\t\t\t<ThemeIcon />\n\t\t\t\t</IconButton>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport NavigationBar from 'components/NavigationBar';\n\ninterface IHeader {\n\tisDarkMode: boolean;\n\thandleChangeTheme: () => void;\n}\n\nconst Header = ({ isDarkMode, handleChangeTheme }: IHeader) => {\n\treturn (\n\t\t<NavigationBar isDarkMode={isDarkMode} handleChangeTheme={handleChangeTheme} />\n\t);\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tpadding: '2px 4px',\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\twidth: 700,\n\t\t\tborderRadius: 4,\n\t\t},\n\t\tinput: {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t\tflex: 1,\n\t\t},\n\t\ticonButton: {\n\t\t\tpadding: 10,\n\t\t},\n\t})\n);\n\ninterface ISearchBar {\n\thandleOnChange: (\n\t\tevent: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n\t) => void;\n}\n\nconst SearchBar = ({ handleOnChange }: ISearchBar) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Paper component=\"form\" className={classes.root}>\n\t\t\t<IconButton disabled className={classes.iconButton} aria-label=\"search\">\n\t\t\t\t<SearchIcon />\n\t\t\t</IconButton>\n\t\t\t<InputBase\n\t\t\t\tclassName={classes.input}\n\t\t\t\tplaceholder=\"Github repos search\"\n\t\t\t\tinputProps={{ 'aria-label': 'Github repos search' }}\n\t\t\t\tonChange={handleOnChange}\n\t\t\t/>\n\t\t</Paper>\n\t);\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport SearchBar from 'components/SearchBar';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => {\n\treturn {\n\t\troot: {\n\t\t\theight: 100,\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tpadding: '0 20px',\n\t\t},\n\t};\n});\n\ninterface ISearchBarBlock {\n\thandleOnChange: (\n\t\tevent: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n\t) => void;\n}\n\nconst SearchBarBlock = ({ handleOnChange }: ISearchBarBlock) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<SearchBar handleOnChange={handleOnChange} />\n\t\t</div>\n\t);\n};\n\nexport default SearchBarBlock;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Chip from '@material-ui/core/Chip';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport CodeIcon from '@material-ui/icons/Code';\n\nconst StyledChip = withStyles(() => {\n  return {\n    root: {\n      marginRight: 2,\n      padding: '0 4px',\n    }\n  };\n})(Chip);\n\nconst useStyles = makeStyles((theme) => {\n  const {\n    custom: { repositoryItem }\n  } = theme as any;\n  return {\n    root: {\n      display: 'flex',\n      color: repositoryItem.color,\n    },\n    content: {\n      padding: '0 12px',\n    },\n    fullName: {\n      fontSize: 16,\n      fontWeight: 600,\n    },\n    description: {\n      fontSize: 14,\n      color: repositoryItem.secondaryColor,\n      lineHeight: '24px',\n    },\n    chips: {\n      marginTop: 4,\n    }\n  };\n});\n\ninterface IRepositoryItem {\n  item: any;\n}\n\nconst RepositoryItem = ({ item }: IRepositoryItem) => {\n  const classes = useStyles();\n  const { owner } = item;\n  return (\n    <div className={classes.root}>\n      <Avatar alt={owner.login} src={owner.avatar_url} />\n      <div className={classes.content}>\n        <div className={classes.fullName}>{item.full_name}</div>\n        <div className={classes.description}>{item.description}</div>\n        <div className={classes.chips}>\n          <StyledChip variant=\"outlined\" size=\"small\" label={item.language} icon={<CodeIcon />} />\n          <StyledChip variant=\"outlined\" size=\"small\" label={item.stargazers_count} icon={<StarBorderIcon />} />\n          <StyledChip variant=\"outlined\" size=\"small\" label={item.watchers} icon={<VisibilityIcon />} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RepositoryItem;\n","import React from 'react';\nimport RepositoryItem from './RepositoryItem'\nimport Container from '@material-ui/core/Container';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from '@material-ui/core/ListItem';\n\nconst StyledContainer = withStyles(() => {\n  return {\n    root: {\n\t\t\tpadding: '0 20px 20px 20px',\n    }\n  };\n})(Container);\n\nconst useStyles = makeStyles(() => {\n  return {\n    root: {\n\t\t\tborderRadius: 4,\n\t\t\tpadding: '8px 0',\n\t\t\tbackground: 'white',\n\t\t},\n\t\titem: {\n\t\t\tborderBottom: '1px solid #ddd',\n\t\t}\n  };\n});\n\ninterface ISearchResult {\n\trepositories: any;\n}\n\nconst SearchResult = ({ repositories }: ISearchResult) => {\n\tconst classes = useStyles();\n\tconst { items } = repositories;\n\treturn (\n\t\t<StyledContainer maxWidth=\"md\">\n\t\t\t<div className={classes.root}>\n\t\t\t\t{\n\t\t\t\t\titems.map((item) => (\n\t\t\t\t\t\t<ListItem button key={item.id} className={classes.item}>\n\t\t\t\t\t\t\t<RepositoryItem item={item} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</StyledContainer>\n\t);\n};\n\nexport default SearchResult;\n","const KEY = 'github-repos-search';\nconst FETCH_REPOSITORIES = `${KEY}/FETCH_REPOSITORIES`;\nconst SET_REPOSITORIES = `${KEY}/SET_REPOSITORIES`;\nconst FETCH_REPOSITORIES_LOADING = `${KEY}/FETCH_REPOSITORIES_LOADING`;\n\nconst LOAD_REPOSITORIES = `${KEY}/LOAD_REPOSITORIES`;\nconst LOAD_REPOSITORIES_LOADING = `${KEY}/LOAD_REPOSITORIES_LOADING`;\nconst UPDATE_REPOSITORIES_LOADING = `${KEY}/UPDATE_REPOSITORIES_LOADING`;\n\nexport {\n\tFETCH_REPOSITORIES,\n\tFETCH_REPOSITORIES_LOADING,\n\tSET_REPOSITORIES,\n\tLOAD_REPOSITORIES,\n\tLOAD_REPOSITORIES_LOADING,\n\tUPDATE_REPOSITORIES_LOADING\n};\n\nconst fetchRepositories = ({ queryString, perPage }) => ({\n\ttype: FETCH_REPOSITORIES,\n\tpayload: {\n\t\tqueryString,\n\t\tperPage,\n\t},\n});\n\ninterface IRepositories {\n\terror?: any;\n\tdata?: any;\n}\n\nconst setRepositories = ({ error, data }: IRepositories) => ({\n\ttype: SET_REPOSITORIES,\n  error,\n  payload: {\n\t\tdata\n\t},\n});\n\nconst fetchRepositoriesLoading = () => ({\n\ttype: FETCH_REPOSITORIES_LOADING,\n});\n\nconst loadRepositories = ({ queryString, page, perPage }) => ({\n\ttype: LOAD_REPOSITORIES,\n\tpayload: { queryString, page, perPage },\n});\n\nconst loadRepositoriesLoading = () => ({\n\ttype: LOAD_REPOSITORIES_LOADING,\n});\n\nconst updateRepositories = ({ error, data }: IRepositories) => ({\n\ttype: UPDATE_REPOSITORIES_LOADING,\n  error,\n  payload: {\n\t\tdata\n\t},\n});\n\nexport {\n\tfetchRepositories,\n\tfetchRepositoriesLoading,\n\tsetRepositories,\n\tloadRepositories,\n\tloadRepositoriesLoading,\n\tupdateRepositories\n};\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return ({\n    root: {\n      display: 'flex',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: '12px 0',\n    },\n  })\n});\n\ninterface ICircularIndeterminate {\n  color?: string;\n}\n\nconst CircularIndeterminate = ({ color }: ICircularIndeterminate) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress style={{ color: color }} />\n    </div>\n  );\n}\n\nexport default CircularIndeterminate;\n","import React, { useRef, useState, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport SearchBarBlock from \"./SearchBarBlock\";\nimport SearchResult from \"./SearchResult\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fetchRepositories, loadRepositories } from \"actions/githubReposSearchActions\";\nimport CircularIndeterminate from 'components/CircularIndeterminate'\n\nconst useStyles = makeStyles(theme => {\n  const {\n    custom: { mainContent }\n  } = theme as any;\n  return {\n    root: {\n      background: mainContent.backgroundColor,\n      color: mainContent.color,\n      flex: \"1 1 auto\",\n      overflowY: 'auto',\n    }\n  };\n});\n\ninterface IMainContent {\n  fetchMeta: any;\n  loadMeta: any;\n  repositories: any;\n  page: number;\n  perPage: number;\n  isLastPage: boolean;\n  handleFetchRepositories: (props: any) => void;\n  handleLoadRepositories: (props: any) => void;\n}\n\nconst MainContent = ({ repositories, fetchMeta, loadMeta, page, perPage, isLastPage, handleFetchRepositories, handleLoadRepositories }: IMainContent) => {\n  const mainContentRef = useRef() as any;\n  const classes = useStyles();\n  const [queryString, setQueryString] = useState('')\n  const handleOnQueryChange = useCallback(\n    event => {\n      const value = event.target.value;\n      if (value.length > 0) {\n        handleFetchRepositories({ queryString: value, perPage });\n        setQueryString(value);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n\n  const handleOnScroll = useCallback(() => {\n    const $rDOM = mainContentRef.current;\n    const scrollPos = $rDOM.scrollTop + $rDOM.clientHeight;\n    const divHeight = $rDOM.scrollHeight;\n    if ((scrollPos >= divHeight) && !isLastPage) {\n      handleLoadRepositories({ queryString, page, perPage })\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mainContentRef]);\n\n  return (\n    <div ref={mainContentRef} className={classes.root} onScroll={handleOnScroll}>\n      <SearchBarBlock handleOnChange={handleOnQueryChange} />\n      {\n        fetchMeta.isLoading && <CircularIndeterminate color={\"#fff\"} />\n      }\n      {\n        fetchMeta.isLoaded && <SearchResult repositories={repositories} />\n      }\n      {\n        loadMeta.isLoading && <CircularIndeterminate color={\"#fff\"} />\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { repositories, fetchMeta, loadMeta, page, perPage, isLastPage } = state.githubReposSearchReducer;\n  return {\n    repositories,\n    fetchMeta,\n    loadMeta,\n    page,\n    perPage,\n    isLastPage,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  handleFetchRepositories: (params) =>\n    dispatch(fetchRepositories(params)),\n  handleLoadRepositories: (params) => dispatch(loadRepositories(params))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContent);\n","import React from \"react\";\nimport Header from \"./Header\";\nimport MainContent from \"./MainContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => {\n  return {\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100vh\"\n    }\n  };\n});\n\ninterface IMainPage {\n  isDarkMode: boolean;\n  handleChangeTheme: () => void;\n}\n\nconst MainPage = ({ isDarkMode, handleChangeTheme }: IMainPage) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Header isDarkMode={isDarkMode} handleChangeTheme={handleChangeTheme} />\n      <MainContent />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst sharedProperty = {\n\tnavigationBar: {\n\t\theight: 48,\n\t},\n\tcolor: {},\n};\n\nconst customTheme = {\n\tdark: {\n\t\tcustom: {\n\t\t\tnavigationBar: {\n\t\t\t\tbackgroundColor: '#3b3b3b',\n\t\t\t\tcolor: '#fff',\n\t\t\t},\n\t\t\tmainContent: {\n\t\t\t\tbackgroundColor: '#181818',\n\t\t\t\tcolor: '#fff',\n\t\t\t},\n\t\t\trepositoryItem: {\n\t\t\t\tcolor: '#24292E',\n\t\t\t\tsecondaryColor: '#586096',\n\t\t\t},\n\t\t\tborder: {\n\t\t\t\tdefault: '1px solid #fff3',\n\t\t\t},\n\t\t\tboxShadow: {\n\t\t\t\tdefault: '0 1px 6px rgba(255,255,255,0.2)',\n\t\t\t},\n\t\t},\n\t},\n\tdcard: {\n\t\tcustom: {\n\t\t\tnavigationBar: {\n\t\t\t\tbackgroundColor: '#016AA6',\n\t\t\t\tcolor: '#fff',\n\t\t\t},\n\t\t\tmainContent: {\n\t\t\t\tbackgroundColor: '#00324E',\n\t\t\t\tcolor: '#fff',\n\t\t\t},\n\t\t\trepositoryItem: {\n\t\t\t\tcolor: '#24292E',\n\t\t\t\tsecondaryColor: '#586096',\n\t\t\t},\n\t\t\tborder: {\n\t\t\t\tdefault: '1px solid #01588A',\n\t\t\t},\n\t\t\tboxShadow: {\n\t\t\t\tdefault: '0 1px 6px rgba(32,33,36,.28)',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const darkTheme = createMuiTheme({\n\t...sharedProperty,\n\t...customTheme.dark,\n\tpalette: {\n\t\ttype: 'dark',\n\t},\n});\n\nexport const dcardTheme = createMuiTheme({\n\t...sharedProperty,\n\t...customTheme.dcard,\n\tpalette: {},\n});\n","import update from \"immutability-helper\";\n\nexport const LOADED = 'isLoaded';\nexport const LOADING = 'isLoading';\nexport const ERROR = 'error';\n\nexport const updateMetaLoading = (meta) => update(meta, {\n  [LOADING]: { $set: true },\n  [LOADED]: { $set: false },\n  [ERROR]: { $set: null },\n})\n\nexport const updateMetaDone = (meta) => update(meta, {\n  [LOADING]: { $set: false },\n  [LOADED]: { $set: true },\n  [ERROR]: { $set: null },\n})\n\nexport const updateMetaError = (meta) => update(meta, {\n  [LOADING]: { $set: false },\n  [LOADED]: { $set: false },\n  [ERROR]: { $set: true },\n})\n\nexport default {\n  [LOADING]: false,\n  [LOADED]: false,\n  [ERROR]: null,\n};\n","/* eslint-disable @typescript-eslint/camelcase */\nimport update from \"immutability-helper\";\nimport {\n\tFETCH_REPOSITORIES_LOADING,\n\tSET_REPOSITORIES,\n\tLOAD_REPOSITORIES_LOADING,\n\tUPDATE_REPOSITORIES_LOADING\n} from 'actions/githubReposSearchActions';\nimport META, {\n  updateMetaLoading,\n  updateMetaDone,\n  updateMetaError,\n} from 'utils/meta';\n\nconst initialState = {\n\tpage: 1,\n\tperPage: 30,\n\tisLastPage: false,\n\trepositories: {\n\t\ttotal_count: 0,\n\t\titems: [],\n\t},\n\tfetchMeta: META,\n\tloadMeta: META,\n};\n\nexport default (state = initialState, action) => {\n\tconst { type, error } = action;\n\tswitch (type) {\n\t\tcase FETCH_REPOSITORIES_LOADING: {\n\t\t\treturn update(state, {\n\t\t\t\tfetchMeta: { $apply: updateMetaLoading }\n\t\t\t});\n\t\t}\n\t\tcase SET_REPOSITORIES: {\n\t\t\tif (error) {\n\t\t\t\treturn update(state, {\n\t\t\t\t\tfetchMeta: { $apply: updateMetaError }\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn update(state, {\n\t\t\t\trepositories: { $set: action.payload.data },\n\t\t\t\tfetchMeta: { $apply: updateMetaDone },\n\t\t\t\tisLastPage: { $apply: () => {\n\t\t\t\t\tconst { page, perPage } = state;\n\t\t\t\t\tconst totalCount = action.payload.data.total_count;\n\t\t\t\t\tif (page * perPage >= totalCount) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}},\n\t\t\t\tpage: { $apply: (prevPage) => prevPage + 1},\n\t\t\t});\n\t\t}\n\t\tcase LOAD_REPOSITORIES_LOADING: {\n\t\t\treturn update(state, {\n\t\t\t\tloadMeta: { $apply: updateMetaLoading }\n\t\t\t});\n\t\t}\n\t\tcase UPDATE_REPOSITORIES_LOADING: {\n\t\t\tif (error) {\n\t\t\t\treturn update(state, {\n\t\t\t\t\tloadMeta: { $apply: updateMetaError }\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn update(state, {\n\t\t\t\trepositories: { $apply: (prevRepositories) => {\n\t\t\t\t\tconst { items } = action.payload.data;\n\t\t\t\t\tconst prevItems = prevRepositories.items;\n\t\t\t\t\tconst updatedRepositories = ({\n\t\t\t\t\t\t...action.payload.data,\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t...prevItems,\n\t\t\t\t\t\t\t...items,\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t\treturn updatedRepositories;\n\t\t\t\t}},\n\t\t\t\tisLastPage: { $apply: () => {\n\t\t\t\t\tconst { page, perPage } = state;\n\t\t\t\t\tconst totalCount = action.payload.data.total_count;\n\t\t\t\t\tif (page * perPage >= totalCount) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}},\n\t\t\t\tpage: { $apply: (prevPage) => {\n\t\t\t\t\tconst { isLastPage } = state;\n\t\t\t\t\tif (isLastPage) {\n\t\t\t\t\t\treturn prevPage;\n\t\t\t\t\t}\n\t\t\t\t\treturn prevPage + 1;\n\t\t\t\t}},\n\t\t\t\tloadMeta: { $apply: updateMetaDone }\n\t\t\t});\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport githubReposSearchReducer from './githubReposSearchReducer';\n\nconst rootReducer = combineReducers({\n\tgithubReposSearchReducer,\n});\n\nexport default rootReducer;\n","import { of, from } from 'rxjs';\nimport {\n  mergeMap, map\n} from 'rxjs/operators';\n\nconst fetchErrorEpic = (err, ...actions) => of(err.action, ...actions);\n\nconst getFetchOption = (method, headers, data) => {\n  const defaultOption = {\n    method,\n    headers: new Headers(headers),\n  };\n  if (method.toLowerCase() === 'get') {\n    return defaultOption;\n  }\n  // POST json object\n  return {\n    method,\n    headers: new Headers(headers),\n    body: JSON.stringify(data),\n  };\n};\n\nconst request = (action) => {\n  const {\n    method,\n    url,\n    data,\n  } = action;\n  const headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n  const fetchOption = getFetchOption(method, headers, data);\n  return from(\n    fetch(url, fetchOption).then((response) => {\n      return response;\n    })).pipe(\n      mergeMap((res) => from(new Promise((resolve, reject) => {\n        res.json().then((fulfilled) => {\n          resolve({\n            status: res.status,\n            res: fulfilled,\n          });\n        }, (err) => reject(err));\n      }))),\n      map((value: any) => {\n        return value.res\n      })\n    )\n}\n\nexport { request, fetchErrorEpic }\n","import { ofType } from 'redux-observable';\nimport { of } from 'rxjs';\nimport { switchMap, mergeMap, startWith, catchError, debounceTime } from 'rxjs/operators';\nimport { FETCH_REPOSITORIES, LOAD_REPOSITORIES } from 'actions/githubReposSearchActions';\nimport { request, fetchErrorEpic } from 'utils/request';\nimport { fetchRepositoriesLoading, setRepositories, updateRepositories, loadRepositoriesLoading } from 'actions/githubReposSearchActions'\n\nconst fetchRepositoriesEpic = (action$) => {\n\treturn action$.pipe(\n\t\tofType(FETCH_REPOSITORIES),\n\t\tdebounceTime(1000),\n\t\tswitchMap(({ payload }) => {\n\t\t\tconst { queryString, perPage } = payload;\n\t\t\treturn request({\n\t\t\t\tmethod: 'get',\n\t\t\t\turl: `https://api.github.com/search/repositories?q=${queryString}&page=1&per_page=${perPage}`,\n\t\t\t\tdata: payload,\n\t\t\t}).pipe(\n        mergeMap((data) => {\n\t\t\t\t\treturn of(\n\t\t\t\t\t\tsetRepositories({ data })\n\t\t\t\t\t)\n\t\t\t\t}),\n        catchError((error) => fetchErrorEpic(\n          error,\n\t\t\t\t\tsetRepositories({ error }),\n        )),\n\t\t\t\tstartWith(fetchRepositoriesLoading()),\n\t\t\t);\n\t\t})\n\t);\n};\n\nconst loadRepositoriesEpic = (action$) => {\n\treturn action$.pipe(\n\t\tofType(LOAD_REPOSITORIES),\n\t\tswitchMap(({ payload }) => {\n\t\t\tconst { queryString, page, perPage } = payload;\n\t\t\treturn request({\n\t\t\t\tmethod: 'get',\n\t\t\t\turl: `https://api.github.com/search/repositories?q=${queryString}=${page}&per_page=${perPage}`,\n\t\t\t\tdata: payload,\n\t\t\t}).pipe(\n        mergeMap((data) => {\n\t\t\t\t\treturn of(\n\t\t\t\t\t\tupdateRepositories({ data })\n\t\t\t\t\t)\n\t\t\t\t}),\n        catchError((error) => fetchErrorEpic(\n          error,\n\t\t\t\t\tupdateRepositories({ error }),\n        )),\n\t\t\t\tstartWith(loadRepositoriesLoading()),\n\t\t\t);\n\t\t})\n\t);\n};\n\nexport default [\n\tfetchRepositoriesEpic,\n\tloadRepositoriesEpic,\n];\n","import { combineEpics } from 'redux-observable';\nimport githubReposSearchEpics from './githubReposSearchEpics';\n\nconst rootEpic = combineEpics(...githubReposSearchEpics);\n\nexport default rootEpic;\n","import { createEpicMiddleware } from 'redux-observable';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from 'reducers';\nimport rootEpic from 'epics';\n\ndeclare global {\n\t// eslint-disable-next-line @typescript-eslint/interface-name-prefix\n\tinterface Window {\n\t\t__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n\t}\n}\n\nconst epicMiddleware = createEpicMiddleware({\n});\n\nexport default function configureStore() {\n\tconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\tconst middlewares = [epicMiddleware];\n\tconst enhancers = [applyMiddleware(...middlewares)];\n\tconst store = createStore(rootReducer, composeEnhancers(...enhancers));\n\tepicMiddleware.run(rootEpic);\n\treturn store;\n}\n","import configureStore from './configureStore';\n\nconst store = configureStore();\n\nexport default store;\n","import React, { useState, useCallback } from 'react';\nimport { Provider } from 'react-redux';\nimport MainPage from 'containers/MainPage';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { darkTheme, dcardTheme } from './theme';\nimport store from 'store';\n\nconst App = () => {\n\tconst themes = [dcardTheme, darkTheme];\n\tconst [themeIndex, setThemeIndex] = useState(0);\n\n\tconst handleChangeTheme = useCallback(() => {\n\t\tsetThemeIndex(prevIndex => (prevIndex + 1) % 2);\n\t}, []);\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<ThemeProvider theme={themes[themeIndex]}>\n\t\t\t\t<MainPage\n\t\t\t\t\thandleChangeTheme={handleChangeTheme}\n\t\t\t\t\tisDarkMode={themeIndex === 1}\n\t\t\t\t/>\n\t\t\t</ThemeProvider>\n\t\t</Provider>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/dcard_logo.2ef7b509.svg\";"],"sourceRoot":""}
{"version":3,"sources":["components/NavigationBar/dcard_logo.svg","components/NavigationBar/index.tsx","containers/MainPage/Header/index.tsx","components/SearchBar/index.tsx","containers/MainPage/MainContent/SearchBarBlock/index.tsx","containers/MainPage/MainContent/SearchResult/index.tsx","containers/MainPage/MainContent/index.tsx","containers/MainPage/index.tsx","theme/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","navigationBar","custom","root","height","background","backgroundColor","color","boxSizing","display","justifyContent","container","alignItems","padding","margin","width","maxWidth","logo","props","matches","button","NavigationBar","isDarkMode","handleChangeTheme","useMediaQuery","classes","ThemeIcon","Brightness7Icon","Brightness4Icon","className","src","dcardLogoPath","alt","IconButton","aria-label","onClick","Header","createStyles","borderRadius","input","marginLeft","spacing","flex","iconButton","SearchBar","handleOnChange","Paper","component","disabled","InputBase","placeholder","inputProps","onChange","SearchBarBlock","SearchResult","mainContent","MainContent","useState","queryString","setQueryString","handleOnQueryChange","useCallback","event","target","value","console","log","flexDirection","MainPage","sharedProperty","customTheme","border","default","boxShadow","darkTheme","createMuiTheme","palette","type","dcardTheme","App","themes","themeIndex","setThemeIndex","prevIndex","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ac80c75b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dcard_logo.2ef7b509.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n\tBrightness7 as Brightness7Icon,\n\tBrightness4 as Brightness4Icon,\n} from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport dcardLogoPath from './dcard_logo.svg';\n\ninterface IProps {\n\tmatches: boolean;\n}\n\nconst useStyles = makeStyles(theme => {\n\tconst {\n\t\tcustom: { navigationBar },\n\t\tnavigationBar: { height },\n\t} = theme as any;\n\treturn {\n\t\troot: {\n\t\t\theight: height,\n\t\t\tbackground: navigationBar.backgroundColor,\n\t\t\tcolor: navigationBar.color,\n\t\t\tboxSizing: 'border-box',\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tcontainer: {\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'space-between',\n\t\t\tpadding: '0 20px',\n\t\t\tmargin: 'auto',\n\t\t\tboxSizing: 'border-box',\n\t\t\twidth: 1280,\n\t\t\tmaxWidth: 1280,\n\t\t},\n\t\tlogo: (props: IProps) => ({\n\t\t\tdisplay: 'block',\n\t\t\theight: 28,\n\t\t\tpadding: props.matches ? '0 16px' : 0,\n\t\t}),\n\t\tbutton: {\n\t\t\tcolor: navigationBar.color,\n\t\t},\n\t};\n});\n\ninterface INavigationBar {\n\tisDarkMode: boolean;\n\thandleChangeTheme: () => void;\n}\n\nconst NavigationBar = ({ isDarkMode, handleChangeTheme }: INavigationBar) => {\n\tconst matches = useMediaQuery('(min-width: 768px)');\n\tconst classes = useStyles({ matches });\n\tconst ThemeIcon = isDarkMode ? Brightness7Icon : Brightness4Icon;\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.container}>\n\t\t\t\t<img src={dcardLogoPath} className={classes.logo} alt=\"dcard logo\" />\n\t\t\t\t<IconButton\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\taria-label=\"theme change\"\n\t\t\t\t\tonClick={handleChangeTheme}\n\t\t\t\t>\n\t\t\t\t\t<ThemeIcon />\n\t\t\t\t</IconButton>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport NavigationBar from 'components/NavigationBar';\n\ninterface IHeader {\n\tisDarkMode: boolean;\n\thandleChangeTheme: () => void;\n}\n\nconst Header = ({ isDarkMode, handleChangeTheme }: IHeader) => {\n\treturn (\n\t\t<NavigationBar isDarkMode={isDarkMode} handleChangeTheme={handleChangeTheme} />\n\t);\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tpadding: '2px 4px',\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\twidth: 700,\n\t\t\tborderRadius: 4,\n\t\t},\n\t\tinput: {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t\tflex: 1,\n\t\t},\n\t\ticonButton: {\n\t\t\tpadding: 10,\n\t\t},\n\t})\n);\n\ninterface ISearchBar {\n\thandleOnChange: (\n\t\tevent: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n\t) => void;\n}\n\nconst SearchBar = ({ handleOnChange }: ISearchBar) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Paper component=\"form\" className={classes.root}>\n\t\t\t<IconButton disabled className={classes.iconButton} aria-label=\"search\">\n\t\t\t\t<SearchIcon />\n\t\t\t</IconButton>\n\t\t\t<InputBase\n\t\t\t\tclassName={classes.input}\n\t\t\t\tplaceholder=\"Github repos search\"\n\t\t\t\tinputProps={{ 'aria-label': 'Github repos search' }}\n\t\t\t\tonChange={handleOnChange}\n\t\t\t/>\n\t\t</Paper>\n\t);\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport SearchBar from 'components/SearchBar';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => {\n\treturn {\n\t\troot: {\n\t\t\theight: 100,\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tpadding: '0 20px',\n\t\t},\n\t};\n});\n\ninterface ISearchBarBlock {\n\thandleOnChange: (\n\t\tevent: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n\t) => void;\n}\n\nconst SearchBarBlock = ({ handleOnChange }: ISearchBarBlock) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<SearchBar handleOnChange={handleOnChange} />\n\t\t</div>\n\t);\n};\n\nexport default SearchBarBlock;\n","import React from 'react';\n\nconst SearchResult = () => {\n\treturn <div>SearchResult</div>;\n};\n\nexport default SearchResult;\n","import React, { useState, useCallback } from 'react';\nimport SearchBarBlock from './SearchBarBlock';\nimport SearchResult from './SearchResult';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => {\n\tconst {\n\t\tcustom: { mainContent },\n\t} = theme as any;\n\treturn {\n\t\troot: {\n\t\t\tbackground: mainContent.backgroundColor,\n\t\t\tcolor: mainContent.color,\n\t\t\tflex: '1 1 auto',\n\t\t},\n\t};\n});\n\nconst MainContent = () => {\n\tconst classes = useStyles();\n\tconst [queryString, setQueryString] = useState('');\n\tconst handleOnQueryChange = useCallback(event => {\n\t\tsetQueryString(event.target.value);\n\t}, []);\n\tconsole.log('queryString: ', queryString);\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<SearchBarBlock handleOnChange={handleOnQueryChange} />\n\t\t\t<SearchResult />\n\t\t</div>\n\t);\n};\n\nexport default MainContent;\n","import React from 'react';\nimport Header from './Header';\nimport MainContent from './MainContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => {\n\treturn {\n\t\troot: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t\theight: '100vh',\n\t\t},\n\t};\n});\n\ninterface IMainPage {\n\tisDarkMode: boolean;\n\thandleChangeTheme: () => void;\n}\n\nconst MainPage = ({ isDarkMode, handleChangeTheme }: IMainPage) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Header isDarkMode={isDarkMode} handleChangeTheme={handleChangeTheme} />\n\t\t\t<MainContent />\n\t\t</div>\n\t);\n};\n\nexport default MainPage;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst sharedProperty = {\n\tnavigationBar: {\n\t\theight: 48,\n\t},\n\tcolor: {},\n};\n\nconst customTheme = {\n\tdark: {\n\t\tcustom: {\n\t\t\tnavigationBar: {\n\t\t\t\tbackgroundColor: '#3b3b3b',\n\t\t\t\tcolor: '#fff',\n\t\t\t},\n\t\t\tmainContent: {\n\t\t\t\tbackgroundColor: '#181818',\n\t\t\t\tcolor: '#fff',\n\t\t\t},\n\t\t\tborder: {\n\t\t\t\tdefault: '1px solid #fff3',\n\t\t\t},\n\t\t\tboxShadow: {\n\t\t\t\tdefault: '0 1px 6px rgba(255,255,255,0.2)',\n\t\t\t},\n\t\t},\n\t},\n\tdcard: {\n\t\tcustom: {\n\t\t\tnavigationBar: {\n\t\t\t\tbackgroundColor: '#016AA6',\n\t\t\t\tcolor: '#fff',\n\t\t\t},\n\t\t\tmainContent: {\n\t\t\t\tbackgroundColor: '#00324E',\n\t\t\t\tcolor: '#fff',\n\t\t\t},\n\t\t\tborder: {\n\t\t\t\tdefault: '1px solid #01588A',\n\t\t\t},\n\t\t\tboxShadow: {\n\t\t\t\tdefault: '0 1px 6px rgba(32,33,36,.28)',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const darkTheme = createMuiTheme({\n\t...sharedProperty,\n\t...customTheme.dark,\n\tpalette: {\n\t\ttype: 'dark',\n\t},\n});\n\nexport const dcardTheme = createMuiTheme({\n\t...sharedProperty,\n\t...customTheme.dcard,\n\tpalette: {},\n});\n","import React, { useState, useCallback } from 'react';\nimport MainPage from 'containers/MainPage';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { darkTheme, dcardTheme } from './theme';\n\nconst App = () => {\n\tconst themes = [dcardTheme, darkTheme];\n\tconst [themeIndex, setThemeIndex] = useState(0);\n\n\tconst handleChangeTheme = useCallback(() => {\n\t\tsetThemeIndex(prevIndex => (prevIndex + 1) % 2);\n\t}, []);\n\n\treturn (\n\t\t<ThemeProvider theme={themes[themeIndex]}>\n\t\t\t<MainPage\n\t\t\t\thandleChangeTheme={handleChangeTheme}\n\t\t\t\tisDarkMode={themeIndex === 1}\n\t\t\t/>\n\t\t</ThemeProvider>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}